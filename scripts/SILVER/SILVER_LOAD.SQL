CREATE OR REPLACE PROCEDURE DW.SILVER.LOAD_SILVER ()
RETURNS STRING
LANGUAGE SQL
AS
$$

--DECLARE V_TIMESTAMP STRING;

BEGIN


--LET V_TIMESTAMP=TO_CHAR(CURRENT_TIMESTAMP, 'YYYY-MM-DD HH24:MI:SS');

DELETE FROM SILVER.crm_sales_details;

INSERT INTO SILVER.crm_sales_details (

     SLS_ORD_NUM
    ,SLS_PRD_KEY
    ,SLS_CUST_ID
    ,SLS_ORDER_DT
    ,SLS_SHIP_DT
    ,SLS_DUE_DT
    ,SLS_SALES
    ,SLS_QUANTITY
    ,SLS_PRICE
    ,dwh_create_date)

SELECT 
     SLS_ORD_NUM
    ,SLS_PRD_KEY
    ,SLS_CUST_ID
    ,CASE WHEN SLS_ORDER_DT=0 OR LEN(SLS_ORDER_DT)!=8 THEN NULL
     ELSE TO_DATE(TO_VARCHAR(SLS_ORDER_DT),'YYYYMMDD') END AS SL_ORDER_DT
    ,CASE WHEN SLS_ORDER_DT=0 OR LEN(SLS_SHIP_DT)!=8 THEN NULL
     ELSE TO_DATE(TO_VARCHAR(SLS_SHIP_DT),'YYYYMMDD') END AS SLS_SHIP_DT
    ,CASE WHEN SLS_DUE_DT=0 OR LEN(SLS_DUE_DT)!=8 THEN NULL
     ELSE TO_DATE(TO_VARCHAR(SLS_DUE_DT),'YYYYMMDD') END AS SLS_DUE_DT
     ,CASE WHEN SLS_SALES IS NULL OR SLS_SALES<=0 OR SLS_SALES!=SLS_QUANTITY*ABS(SLS_PRICE)
          THEN SLS_QUANTITY * ABS(SLS_PRICE) ELSE SLS_SALES END AS SLS_SALES
    ,SLS_QUANTITY
    ,CASE WHEN SLS_PRICE IS NULL OR SLS_PRICE <=0
          THEN SLS_SALES / NULLIF(SLS_QUANTITY,0)  ELSE SLS_PRICE END AS SLS_PRICE
    ,CURRENT_DATE
FROM BRONZE.CRM_SALES_DETAILS;



DELETE FROM SILVER.CRM_PROD_INFO;

INSERT INTO SILVER.CRM_PROD_INFO(

    PRD_ID
   ,CAT_ID
   ,PRD_KEY
   ,PRD_NM
   ,PRD_COST
   ,PRD_LINE
   ,PRD_START_DT
   ,PRD_END_DT
   ,DWH_CREATE_DATE)

SELECT

    PRD_ID
   ,REPLACE(SUBSTR(PRD_KEY,1,5),'-','_') AS CAT_ID
   ,SUBSTR(PRD_KEY,7,LEN(PRD_KEY)) AS PRD_KEY
   ,PRD_NM
   ,PRD_COST
   --,PRD_LINE
   ,CASE UPPER(TRIM(prd_line))
        WHEN 'M' then 'MOUNTAIN'
        WHEN 'R' then 'ROAD'
        WHEN 'S' then 'Other Sales'
        WHEN 'R' then 'Touring'
        ELSE 'n/a' end as PRD_LINE
         
   ,PRD_START_DT :: DATE
   ,(LEAD(PRD_START_DT) OVER (PARTITION BY PRD_KEY ORDER BY PRD_START_DT) - INTERVAL '1 day') :: DATE AS PRD_END_DT
   ,CURRENT_DATE
FROM   BRONZE.CRM_PROD_INFO;




DELETE FROM SILVER.ERP_LOC_AZ12;

INSERT INTO SILVER.ERP_LOC_AZ12(

        CID, BDATE,GEN
)

SELECT    
          REPLACE(CID,'NAS','') AS CID
         ,CASE WHEN BDATE>CURRENT_DATE THEN NULL  ELSE BDATE END AS BDATE
         ,CASE WHEN TRIM(GEN)='M' THEN 'Male'
               WHEN TRIM(GEN)='F' THEN 'Female'
               WHEN TRIM(GEN)='' THEN 'NA'
               ELSE GEN END AS GEN 
FROM DW.BRONZE.ERP_LOC_AZ12;


DELETE FROM SILVER.CRM_PROD_INFO;

INSERT INTO SILVER.CRM_PROD_INFO(

    PRD_ID
   ,CAT_ID
   ,PRD_KEY
   ,PRD_NM
   ,PRD_COST
   ,PRD_LINE
   ,PRD_START_DT
   ,PRD_END_DT
   ,DWH_CREATE_DATE)

SELECT

    PRD_ID
   ,REPLACE(SUBSTR(PRD_KEY,1,5),'-','_') AS CAT_ID
   ,SUBSTR(PRD_KEY,7,LEN(PRD_KEY)) AS PRD_KEY
   ,PRD_NM
   ,PRD_COST
   --,PRD_LINE
   ,CASE UPPER(TRIM(prd_line))
        WHEN 'M' then 'MOUNTAIN'
        WHEN 'R' then 'ROAD'
        WHEN 'S' then 'Other Sales'
        WHEN 'R' then 'Touring'
        ELSE 'n/a' end as PRD_LINE
         
   ,PRD_START_DT :: DATE
   ,(LEAD(PRD_START_DT) OVER (PARTITION BY PRD_KEY ORDER BY PRD_START_DT) - INTERVAL '1 day') :: DATE AS PRD_END_DT
   ,CURRENT_DATE
FROM   BRONZE.CRM_PROD_INFO;


DELETE FROM BRONZE.ERP_LOC_A101;


 INSERT INTO SILVER.ERP_LOC_A101(CID, CNTRY)
    SELECT REPLACE(CID,'-','') CID,
           CASE WHEN TRIM(CNTRY)='DE' THEN 'Germany'
                WHEN TRIM(CNTRY) IN('US','USA') THEN 'United States'
                WHEN TRIM(CNTRY)='' OR CNTRY IS NULL THEN 'N/A'
                ELSE TRIM(CNTRY) END AS CNTRY
           
FROM BRONZE.ERP_LOC_A101;


DELETE FROM BRONZE.ERP_PX_CAT_GLV2;

INSERT INTO SILVER.ERP_PX_CAT_GLV2 ( ID, CAT, SUBCAT, MAINTENANCE)
SELECT  ID, CAT, SUBCAT, MAINTENANCE FROM BRONZE.ERP_PX_CAT_GLV2;




DELETE FROM SILVER.CRM_CUST_INFO;
INSERT INTO SILVER.CRM_CUST_INFO  (CUST_ID
,CST_KEY
,CST_FIRSTNAME
,CST_LASTNAME
,CST_MATERIAL_STATUS
,CST_GNDR
,CST_CREATE_DATE)
SELECT  CUST_ID,
        CST_KEY,
        TRIM(CST_FIRSTNAME) AS CST_FIRSTNAME,
        TRIM(CST_LASTNAME)AS CST_LASTNAME,
       
        CASE WHEN UPPER(TRIM(CST_MATERIAL_STATUS))='M' THEN 'Married'
             WHEN UPPER(TRIM(CST_MATERIAL_STATUS))='S' THEN 'Single'
             ELSE 'n/a' END AS CST_MATERIAL_STATUS,
        CASE WHEN UPPER(TRIM(CST_GNDR))='M' THEN 'Male'
             WHEN UPPER(TRIM(CST_GNDR))='F' THEN 'Female'
             ELSE 'n/a' END AS CST_GNDR,
            
        CST_CREATE_DATE
        
FROM DW.BRONZE.CRM_CUST_INFO
QUALIFY ROW_NUMBER() OVER(PARTITION BY CUST_ID ORDER BY CST_CREATE_DATE DESC) =1;



RETURN 'SILVER LAYER LOAD COMPLETED SUCCESSFULLY';
--RETURN CURRENT_TIMESTAMP;


END;
$$;
